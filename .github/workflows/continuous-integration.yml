name: Continuous integration
on: pull_request
jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      python_headline_version: ${{ steps.list-python-versions.outputs.python_headline_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: List Python versions
        id: list-python-versions
        run: |
          pip install hdev
          echo "::set-output name=python_headline_version::`hdev python_version --style plain --first`"

  backend:
    name: Backend
    needs: metadata
    runs-on: ubuntu-latest
    env:
      TOX_PARALLEL_NO_SPINNER: 1

    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
          - 5434:5432
    steps:
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ needs.metadata.outputs.python_headline_version }}

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Install tox
      run: python -m pip install tox

    - name: Checkout git repo
      uses: actions/checkout@v2

    - name: Create test databases
      run: |
        psql -U postgres -h localhost -p 5434 -c 'CREATE DATABASE checkmate_test'
        psql -U postgres -h localhost -p 5434 -c 'CREATE DATABASE checkmate_functests'

    - name: Cache the .tox dir
      uses: actions/cache@v2
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ secrets.CACHE_VERSION }}-${{ hashFiles('tox.ini', 'requirements*', 'setup.py', 'setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-tox-${{ secrets.CACHE_VERSION }}-

    - name: Run tox
      run: tox --parallel auto -e lint,checkformatting,tests,coverage,functests
