name: CI

on:
  push:
    paths-ignore:
      - '.cookiecutter/*'
      - 'docs/*'
      - 'requirements/*.in'
      - 'requirements/dev.txt'
      - '**/.gitignore'
      - '*.md'
      - 'LICENSE'
  workflow_call:

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    env:
      TOX_PARALLEL_NO_SPINNER: 1

    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
          - 5434:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout git repo
      uses: actions/checkout@v3

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version-file: '.python-version'

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Install tox
      run: python -m pip install 'tox<4'

    - name: Create test databases
      run: |
        psql -U postgres -h localhost -p 5434 -c 'CREATE DATABASE checkmate_test'
        psql -U postgres -h localhost -p 5434 -c 'CREATE DATABASE checkmate_functests'

    - name: Cache the .tox dir
      uses: actions/cache@v3
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ secrets.CACHE_VERSION }}-${{ hashFiles('tox.ini', 'requirements*', 'setup.py', 'setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-tox-${{ secrets.CACHE_VERSION }}-

    - name: Run tox
      run: tox --parallel auto -e lint,checkformatting,tests,coverage,functests
